<main class="content-container">
    <div class="auth-container">
        <!-- Form Header -->
        <div class="form-header">
            <h1><%= title %></h1>
            <p>Create your Mac Motors account</p>
        </div>

        <!-- Server-Side Messages Only -->
        <% if (messages && messages.notice && messages.notice.length > 0) { %>
            <div class="flash-message">
                <ul class="notice">
                    <% messages.notice.forEach(function(message){ %>
                        <li><%= message %></li>
                    <% }) %>
                </ul>
            </div>
        <% } %>

        <!-- Server-Side Validation Errors -->
        <% if (errors && errors.array && errors.array().length > 0) { %>
            <div class="flash-message error">
                <ul class="notice">
                    <% errors.array().forEach(function(error){ %>
                        <li><%= error.msg %></li>
                    <% }) %>
                </ul>
            </div>
        <% } %>

        <!-- Registration Form - Client-Side Validation by Default -->
        <form action="/account/register" method="post" class="auth-form" id="registrationForm">
            
            <!-- First Name -->
            <div class="form-group">
                <label for="account_firstname">
                    First Name <span class="required">*</span>
                </label>
                <input 
                    type="text" 
                    id="account_firstname" 
                    name="account_firstname" 
                    required
                    minlength="2"
                    maxlength="50"
                    autocomplete="given-name"
                    value="<%= typeof account_firstname !== 'undefined' ? account_firstname : '' %>"
                    placeholder="Enter your first name"
                >
            </div>

            <!-- Last Name -->
            <div class="form-group">
                <label for="account_lastname">
                    Last Name <span class="required">*</span>
                </label>
                <input 
                    type="text" 
                    id="account_lastname" 
                    name="account_lastname" 
                    required
                    minlength="2"
                    maxlength="50"
                    autocomplete="family-name"
                    value="<%= typeof account_lastname !== 'undefined' ? account_lastname : '' %>"
                    placeholder="Enter your last name"
                >
            </div>
            
            <!-- Email -->
            <div class="form-group">
                <label for="account_email">
                    Email Address <span class="required">*</span>
                </label>
                <input 
                    type="email" 
                    id="account_email" 
                    name="account_email" 
                    required
                    autocomplete="email"
                    value="<%= typeof account_email !== 'undefined' ? account_email : '' %>"
                    placeholder="Enter your email address"
                >
            </div>

            <!-- Password -->
            <div class="form-group">
                <label for="account_password">
                    Password <span class="required">*</span>
                </label>
                <div class="password-container">
                    <input 
                        type="password" 
                        id="account_password" 
                        name="account_password" 
                        required
                        minlength="12"
                        pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{12,}$"
                        autocomplete="new-password"
                        placeholder="Create a strong password"
                    >
                    <button type="button" id="togglePassword" class="toggle-password">Show</button>
                </div>
                
                <!-- Password Requirements -->
                <div class="requirements">
                    <h4>Password Requirements:</h4>
                    <ul>
                        <li>Minimum 12 characters in length</li>
                        <li>Contain at least 1 capital letter (A-Z)</li>
                        <li>Contain at least 1 number (0-9)</li>
                        <li>Contain at least 1 special character (@$!%*?&)</li>
                    </ul>
                </div>
            </div>

            <button type="submit" class="submit-btn">Create Account</button>

            <div class="login-link">
                <p>Already have an account? <a href="/account/login">Sign in here</a></p>
            </div>
        </form>
    </div>
</main>

<script>
document.addEventListener('DOMContentLoaded', function () {
    // Password toggle
    const toggleButton = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('account_password');

    if (toggleButton && passwordInput) {
        toggleButton.addEventListener('click', function () {
            const type = passwordInput.type === 'password' ? 'text' : 'password';
            passwordInput.type = type;
            toggleButton.textContent = type === 'password' ? 'Show' : 'Hide';
        });
    }

    // ðŸŽ¯ CLEAR MESSAGES IMMEDIATELY (no delay)
    const flashMessages = document.querySelectorAll('.flash-message');
    
    // Check if we should clear messages (reload or has cleared parameter)
    const urlParams = new URLSearchParams(window.location.search);
    const shouldClear = performance.navigation?.type === 1 || urlParams.has('cleared');
    
    if (shouldClear && flashMessages.length > 0) {
        // Remove messages immediately
        flashMessages.forEach(msg => msg.remove());
        
        // Add cleared parameter to prevent future shows
        if (!urlParams.has('cleared')) {
            const newUrl = window.location.href + (window.location.href.includes('?') ? '&' : '?') + 'cleared=true';
            window.history.replaceState({}, document.title, newUrl);
        }
    }

    // ðŸŽ¯ Handle novalidate parameter
    if (urlParams.has('novalidate')) {
        document.getElementById('registrationForm').setAttribute('novalidate', 'novalidate');
        
        // Clean URL but keep cleared parameter
        const baseUrl = window.location.href.split('?')[0];
        const cleanUrl = urlParams.has('cleared') ? baseUrl + '?cleared=true' : baseUrl;
        window.history.replaceState({}, document.title, cleanUrl);
        
        console.log('ðŸ”§ Server-side mode active');
    } else {
        document.getElementById('registrationForm').removeAttribute('novalidate');
        console.log('ðŸ”’ Client-side mode active');
    }
});
</script>